class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        
        // vector<vector<int>> visited(board.size(),vector<int>(0,board.size()));
        for(int i = 0; i < board.size(); i++)
            for(int j = 0; j < board[i].size(); j++){
                if(word[0] == board[i][j]){
                    bool status = dfs(board,word,i,j,0);
                    if(status == true)
                        return status;
                }
            }
        return false;
    }
    
    bool dfs(vector<vector<char>> &board, string &word,int i,int j, int index){
        
        if(index == word.size())
            return true;
        
        if(i>=board.size() || i<0 || j>=board[0].size() || j<0)
            return false;
        
        if( word[index]!=board[i][j])
            return false;
        
        char current = board[i][j];
        board[i][j] = '@';              // visited;
        
        bool search = dfs(board,word,i+1,j,index+1) || dfs(board,word,i-1,j,index+1) || dfs(board,word,i,j+1,index+1) || dfs(board,word,i,j-1,index+1);
        board[i][j] = current ;         // reset;
        return search;
    }
};
